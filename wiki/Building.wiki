#summary How to build and install phonon-vlc-mplayer
#labels Featured,Phase-Requirements,Phase-Deploy

=Introduction=

This document explains how to build and install phonon-vlc-mplayer under Windows and GNU/Linux.

=Requirements=

 * OS: GNU/Linux, Windows
 * Tested under: Windows XP SP2, Ubuntu Hardy 8.04
 * Language: C++
 * License: GNU LGPL
 * Dependencies:
   * Qt: >= 4.4.0
      * Website: http://trolltech.com/
      * Download link: ftp://ftp.trolltech.com/qt/source/
   * Phonon: >= 4.2.80 (provided by phonon-vlc-mplayer)
      * Website: http://kde.org/
   * CMake: >= 2.6.1
      * Website: http://cmake.org/
      * Download link: http://cmake.org/HTML/Download.html
   * Compiler: GCC or MinGW or Visual C++

==GNU/Linux==

If Qt is not present on your distribution (libqt4-devel packages), you will have to compile Qt yourself. Recent GNU/Linux distributions already provide Qt.
Please refer to the links above for downloading and installing Qt "by hand".

==MinGW==

 * Install Qt compiled for MinGW: [http://ftp.ntua.gr/pub/X11/Qt/qt/source/qt-win-opensource-4.4.3-mingw.exe qt-win-opensource-4.4.3-mingw.exe]

This package includes Qt and MinGW.

(For the little story, the default Windows backend for Phonon is based on !DirectShow 9 and MinGW is not capable of compiling it, that's why Trolltech doesn't ship the !DirectShow 9 backend with Qt MinGW)

==Visual C++==

You can use Visual C++ instead of MinGW, several versions are supported:
 * Visual C++ 2003 (MSVC71) released in April 2003
 * Visual C++ 2005 (MSVC8) released in November 2005
 * Visual C++ 2008 (MSVC9) released in November 2007
Previous versions of Visual C++ are not supported.

Visual C++ (within Visual Studio) comes in different editions:
 * Express - free for non commercial use
 * Standard
 * Professional
 * Team System - comes with performance collection tools

Why Visual C++ over MinGW? Visual C++ is better for day to day developing and produces better binaries. Visual C++ is the recommend compiler under Windows.

After installing Visual Studio, you will be able to compile Qt (see links above) and then phonon-vlc-mplayer. When compiling Qt, I recommend to use {{{configure -no-qt3support -nomake examples -nomake demos}}}

(Old Qt Windows binaries can be found here: http://qt.windows.binaries.googlepages.com/index.html)

===Visual Studio Evaluation Copy===

You can download an evaluation copy (90 days) of Visual C++ 2008 Team Suite [http://msdn.microsoft.com/en-us/evalcenter/bb633757.aspx here] (3.82 GB) or an evaluation copy (180 days) of Visual Studio 2005 [http://download.microsoft.com/download/6/f/5/6f5f7a01-50bb-422d-8742-c099c8896969/En_vs_2005_vsts_180_Trial.img here] (3.33 GB).
After installing the evaluation copy, there is not much to do: the installer of the commercial/evaluation version sets up the environment and provides a 'Visual Studio Command Prompt'.

===Visual Studio Express Edition===

/!\ The whole installation process of Visual Studio Express Edition is long and uneasy, I recommend to use an evaluation copy of Visual Studio or MinGW.

Here some informations about Visual C++ 2005 Express Edition (informations taken from [http://techbase.kde.org/index.php?title=Getting_Started/Build/KDE4/Windows/MS_Visual_Studio#Visual_Studio_2005_Express_Edition KDE TechBase])

 * Install Visual C++ 2005 Express Edition: http://www.microsoft.com/express/2005/download/default.aspx
 * Install Platform/Windows SDK: [http://en.wikipedia.org/wiki/Microsoft_Windows_SDK#Obtaining_the_SDK link]
 * Install Service Pack 1 for Visual C++ 2005 Express Edition (probably not needed, please tell me if it works without): [http://www.microsoft.com/downloads/details.aspx?FamilyID=7b0b0339-613a-46e6-ab4d-080d4d4a8c4e&DisplayLang=en link]
 * Install DirectX SDK if you want to compile the !DirectShow 9 backend: [http://msdn.microsoft.com/en-us/directx/default.aspx link]
 * Install CMake (see links above)

You need to setup you compiling environment, I use this small script: [http://code.google.com/p/phonon-vlc-mplayer/source/browse/wiki setenv-*.bat].
Adapt this script to fit your own needs. You have to run it from a 'Command prompt' each time you want to compile something using Visual C++ 2005.

==MacOS X==

I didn't try phonon-vlc-mplayer under MacOS X (I don't have an Apple computer).
However, VLC and MPlayer run under MacOS X and 99% of phonon-vlc-mplayer source code is multiplatform and depends only on Qt. Only need should be to modify CMakeLists.txt files.

==Compiling the latest Phonon library==

Qt generally comes with an old version of Phonon, that's one of the reason why phonon-vlc-mplayer ships its own copy of Phonon SVN that contains several patches not included yet inside the official version.

==MPlayer Phonon backend==

 * Dependencies
   * Same as above +
   * MPlayer: >= MPlayer-1.0rc2
      * Website: http://www.mplayerhq.hu/
      * Developers infos: http://www.mplayerhq.hu/DOCS/tech/slave.txt
      * Download link: http://www.mplayerhq.hu/design7/dload.html

MPlayer Phonon backend runs the MPlayer (mplayer.exe under Windows) process in slave mode.

 * Under GNU/Linux, you should get a MPlayer package with your favorite GNU/Linux distribution.

 * Under Windows, install [http://smplayer.sourceforge.net/ SMPlayer] that comes with a Windows build of MPlayer. phonon-mplayer looks for {{{mplayer/mplayer.exe}}}

==VLC Phonon backend==

/!\ phonon-vlc-mplayer, beside its name, does not come anymore with the VLC backend. Please see http://git.videolan.org/?p=vlc-lukas.git;a=tree;f=projects/phonon/vlc;hb=HEAD

 * Dependencies
   * Same as above +
   * VLC: VLC-0.9 (git trunk)
      * Website: http://www.videolan.org/
      * Developers infos: http://wiki.videolan.org/Developers_Corner
      * Download link: http://nightlies.videolan.org/

VLC Phonon backend uses libvlc (http://wiki.videolan.org/Libvlc) in order to control VLC.
It currently works under Windows and Linux by loading libvlc-control.(dll|so) at runtime.
You must install a VLC nightly build, there is no need to install vlc-devel packages.

=Get the source code=

Source code from Subversion repository is around 10 MB.

 * Linux
You need to install [http://subversion.tigris.org/ Subversion], and then enter this command line:
{{{svn co http://phonon-vlc-mplayer.googlecode.com/svn/trunk phonon-vlc-mplayer}}}

 * Windows
Under Windows, I recommend to install [http://tortoisesvn.tigris.org/ TortoiseSVN].
Then right click on an empty directory and select {{{SVN Checkout...}}} and enter {{{http://phonon-vlc-mplayer.googlecode.com/svn/trunk}}}

http://phonon-vlc-mplayer.googlegroups.com/web/phonon-vlc-mplayer-tortoisesvn.png?gda=2qH30VMAAADzGcJ2Wp_dML5pKvawJMYJk78pZsf9cl0k95O_fFnkOmG1qiJ7UbTIup-M2XPURDTf-EQHMgtRDQmqKfqDX3niD-A81HbH9qxuvAXiTpBThAKOZFcal87Qff7gkugrF_g&gsc=-sR1VgsAAABMDwMWexEhpE3I217pOobO

=How to build=

Warning: be sure that your Qt installation matches the way you compile vlc-mplayer i.e if Qt is in debug mode, vlc-mplayer should be compiled in debug mode too. You cannot mix vlc-mplayer in release mode and Qt in debug mode (you will get an error message: "backend cannot be loaded" when running vlc-mplayer).

 * Under GNU/Linux:
{{{
cd trunk
cd build
./build_make-debug.sh
make
make install
make package
}}}

 * Under Windows:
{{{
cd trunk
cd build
build_nmake-debug.bat
nmake
nmake install
nmake package
}}}

For generating a Visual C++ 2005 project, there is {{{build/build_projectmsvc8-debug.bat}}}, however I recommend the process above.

You can also generate Debian, RPM, NSIS, ZIP... packages using command: {{{make package}}}

=Run the Phonon backends=

Qt looks for a specific location where Phonon .(dll|so) plugins are installed. Qt will load the first plugin found from this location.
Check Qt Plugins !HowTo: http://doc.trolltech.com/main-snapshot/plugins-howto.html

KDE allows you to configure the Phonon backend you want to use via the command {{{systemsettings}}}.
Qt comes with the program {{{qtconfig}}} under GNU/Linux that let's you configure your Phonon backend.

Currenlty, Phonon backends have to be recompiled either for KDE or for Qt, that's why you will find some KDE4_FOUND defines in phonon-vlc-mplayer code (Backend.cpp and CMakeLists.txt)

Qt looks for Phonon plugins inside {{{$QTDIR/plugins/phonon_backend}}} and {{{$APPDIR/phonon_backend}}}

=Use phonon-vlc-mplayer with your own Qt application=

Copy phonon-vlc.(dll|so) or phonon-mplayer.(dll|so) inside {{{MYAPP/phonon_backend/}}}

It is not possible to do a {{{Phonon::setPreferredBackend("backend my app need")}}} inside your Qt application.

Please tell me if you encounter some problems via: phonon-vlc-mplayer@googlegroups.com