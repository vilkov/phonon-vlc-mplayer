# -*- python -*-
#
# BuildBot script for QuarkPlayer
#

quarkplayer_svn = "http://phonon-vlc-mplayer.googlecode.com/svn/trunk/"
quarkplayer_builddir = "build/build"

c = BuildmasterConfig = {}


####### BUILDSLAVES

# x86 means x86-32 or i386, see http://en.wikipedia.org/wiki/X86
# x64 means x86-64 or amd64, see http://en.wikipedia.org/wiki/X64
# x86 and x64 are the denominations used by Microsoft

from buildbot.buildslave import BuildSlave
c['slaves'] = [
	BuildSlave("linux-x86", "password"),
	BuildSlave("linux-x64", "password"),
	BuildSlave("windows-x86", "password"),
	BuildSlave("windows-x64", "password")
]

c['slavePortnum'] = 9989


####### CHANGESOURCES

from buildbot.changes.svnpoller import SVNPoller
c['change_source'] = SVNPoller("http://phonon-vlc-mplayer.googlecode.com/svn/trunk/")


####### SCHEDULERS

from buildbot.scheduler import Scheduler, Nightly
build_nightly = Nightly(
	name = "nightly",
	hour = 6,
	minute = 0,
	builderNames = [
#		"linux_x86_trunk_debug",
		"linux_x86_trunk_release",
#		"windows_x86_trunk_mingw_debug",
		"windows_x86_trunk_mingw_release",
#		"windows_x86_trunk_msvc71_debug",
		"windows_x86_trunk_msvc71_release",
#		"windows_x86_trunk_msvc90_debug",
		"windows_x86_trunk_msvc90_release"
	]
)

c['schedulers'] = [build_nightly]


####### BUILDERS

from buildbot.process import factory
from buildbot.steps.source import SVN
from buildbot.steps.shell import Configure, Compile, ShellCommand
from buildbot.steps.transfer import FileDownload
import glob

checkout = SVN(svnurl = quarkplayer_svn)
make_install = Compile(command = "make install", workdir = quarkplayer_builddir)
make_deb = ShellCommand(command = "make deb", workdir = quarkplayer_builddir)
make_rpm = ShellCommand(command = "make rpm", workdir = quarkplayer_builddir)
make_nsis = ShellCommand(command = "make nsis", workdir = quarkplayer_builddir)
upload_package = [
	FileDownload(mastersrc = "login.txt", slavedest = "login.txt", workdir = quarkplayer_builddir),
	FileDownload(mastersrc = "upload_package.py", slavedest = "upload_package.py", workdir = quarkplayer_builddir),
	ShellCommand(command = "python upload_package.py \"*.exe\" \"*.deb\" \"*.rpm\"", workdir = quarkplayer_builddir)
]

linux_x86_trunk_debug = factory.BuildFactory()
linux_x86_trunk_debug.addStep(checkout)
linux_x86_trunk_debug.addStep(Configure(command = "./build_make-debug.sh", workdir = quarkplayer_builddir))
linux_x86_trunk_debug.addStep(make_install)
linux_x86_trunk_debug.addStep(make_deb)
linux_x86_trunk_debug.addStep(make_rpm)
linux_x86_trunk_debug.addSteps(upload_package)
builder_linux_x86_trunk_debug = {
	'name': "linux_x86_trunk_debug",
	'slavename': "linux-x86",
	'builddir': "linux_x86_trunk_debug",
	'factory': linux_x86_trunk_debug,
}

linux_x86_trunk_release = factory.BuildFactory()
linux_x86_trunk_release.addStep(checkout)
linux_x86_trunk_release.addStep(Configure(command="./build_make-release.sh", workdir = quarkplayer_builddir))
linux_x86_trunk_release.addStep(make_install)
linux_x86_trunk_release.addStep(make_deb)
linux_x86_trunk_release.addStep(make_rpm)
linux_x86_trunk_release.addSteps(upload_package)
builder_linux_x86_trunk_release = {
	'name': "linux_x86_trunk_release",
	'slavename': "linux-x86",
	'builddir': "linux_x86_trunk_release",
	'factory': linux_x86_trunk_release,
}

windows_x86_trunk_mingw_debug = factory.BuildFactory()
windows_x86_trunk_mingw_debug.addStep(checkout)
windows_x86_trunk_mingw_debug.addStep(Configure(command = "setenv-qt-4.5.0-mingw.bat & build_mingw-debug.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_debug.addStep(Compile(command = "setenv-qt-4.5.0-mingw.bat & make install", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_debug.addStep(ShellCommand(command = "setenv-qt-4.5.0-mingw.bat & make nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_debug.addSteps(upload_package)
builder_windows_x86_trunk_mingw_debug = {
	'name': "windows_x86_trunk_mingw_debug",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_mingw_debug",
	'factory': windows_x86_trunk_mingw_debug,
}

windows_x86_trunk_mingw_release = factory.BuildFactory()
windows_x86_trunk_mingw_release.addStep(checkout)
windows_x86_trunk_mingw_release.addStep(Configure(command = "setenv-qt-4.5.0-mingw.bat & build_mingw-release.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_release.addStep(Compile(command = "setenv-qt-4.5.0-mingw.bat & make install", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_release.addStep(ShellCommand(command = "setenv-qt-4.5.0-mingw.bat & make nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_mingw_release.addSteps(upload_package)
builder_windows_x86_trunk_mingw_release = {
	'name': "windows_x86_trunk_mingw_release",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_mingw_release",
	'factory': windows_x86_trunk_mingw_release,
}

windows_x86_trunk_msvc71_debug = factory.BuildFactory()
windows_x86_trunk_msvc71_debug.addStep(checkout)
windows_x86_trunk_msvc71_debug.addStep(Configure(command = "setenv-qt-4.5.0-msvc71.bat & build_nmake-debug.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_debug.addStep(Compile(command = "setenv-qt-4.5.0-msvc71.bat & nmake install", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_debug.addStep(ShellCommand(command = "setenv-qt-4.5.0-msvc71.bat & nmake nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_debug.addSteps(upload_package)
builder_windows_x86_trunk_msvc71_debug = {
	'name': "windows_x86_trunk_msvc71_debug",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_msvc71_debug",
	'factory': windows_x86_trunk_msvc71_debug,
}

windows_x86_trunk_msvc71_release = factory.BuildFactory()
windows_x86_trunk_msvc71_release.addStep(checkout)
windows_x86_trunk_msvc71_release.addStep(Configure(command = "setenv-qt-4.5.0-msvc71.bat & build_nmake-release.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_release.addStep(Compile(command = "setenv-qt-4.5.0-msvc71.bat & nmake install", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_release.addStep(ShellCommand(command = "setenv-qt-4.5.0-msvc71.bat & nmake nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc71_release.addSteps(upload_package)
builder_windows_x86_trunk_msvc71_release = {
	'name': "windows_x86_trunk_msvc71_release",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_msvc71_release",
	'factory': windows_x86_trunk_msvc71_release,
}

windows_x86_trunk_msvc90_debug = factory.BuildFactory()
windows_x86_trunk_msvc90_debug.addStep(checkout)
windows_x86_trunk_msvc90_debug.addStep(Configure(command = "setenv-qt-4.5.0-msvc90.bat & build_nmake-debug.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_debug.addStep(Compile(command = "setenv-qt-4.5.0-msvc90.bat & nmake install", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_debug.addStep(ShellCommand(command = "setenv-qt-4.5.0-msvc90.bat & nmake nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_debug.addSteps(upload_package)
builder_windows_x86_trunk_msvc90_debug = {
	'name': "windows_x86_trunk_msvc90_debug",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_msvc90_debug",
	'factory': windows_x86_trunk_msvc90_debug,
}

windows_x86_trunk_msvc90_release = factory.BuildFactory()
windows_x86_trunk_msvc90_release.addStep(checkout)
windows_x86_trunk_msvc90_release.addStep(Configure(command = "setenv-qt-4.5.0-msvc90.bat & build_nmake-release.bat", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_release.addStep(Compile(command = "setenv-qt-4.5.0-msvc90.bat & nmake install", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_release.addStep(ShellCommand(command = "setenv-qt-4.5.0-msvc90.bat & nmake nsis", workdir = quarkplayer_builddir))
windows_x86_trunk_msvc90_release.addSteps(upload_package)
builder_windows_x86_trunk_msvc90_release = {
	'name': "windows_x86_trunk_msvc90_release",
	'slavename': "windows-x86",
	'builddir': "windows_x86_trunk_msvc90_release",
	'factory': windows_x86_trunk_msvc90_release,
}

c['builders'] = [
	builder_linux_x86_trunk_debug,
	builder_linux_x86_trunk_release,
	builder_windows_x86_trunk_mingw_debug,
	builder_windows_x86_trunk_mingw_release,
	builder_windows_x86_trunk_msvc71_debug,
	builder_windows_x86_trunk_msvc71_release,
	builder_windows_x86_trunk_msvc90_debug,
	builder_windows_x86_trunk_msvc90_release
]


####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
c['status'].append(html.WebStatus(http_port = 8010, allowForce = True))


####### PROJECT IDENTITY

c['projectName'] = "QuarkPlayer"
c['projectURL'] = "http://phonon-vlc-mplayer.googlecode.com/"
c['buildbotURL'] = "http://localhost:8010/"
